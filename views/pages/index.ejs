<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta content="[UNIT HUB] Synapse X's Scripting Utility" property="og:title"/>
  <meta content="Quit Krnl's horrible scripting utility and execute your scripts online." property="og:description"/>
  <meta content="#93CAED" data-react-helmet="true" name="theme-color"/>
  <title>Editor</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.css" rel="stylesheet">
  <style type="text/css" media="screen">
    
    body {
        overflow: hidden;
    }

    #editor {
        margin: 0;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
    }

#mydiv {
  position: absolute;
  z-index: 9;
  background-color: #2c2d2c;
  text-align: center;
  font-family: arial;
  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;
}
#mydivheader {
  padding: 10px;
  cursor: move;
  z-index: 10;
  background-color: #403c3c;
  color: #fff;
}

.glow-on-hover {
    width: 110px;
    height: 30px;
    border: none;
    outline: none;
    color: #fff;
    background: #111;
    cursor: pointer;
    position: relative;
    z-index: 0;
    border-radius: 10px;
}

.glow-on-hover:before {
    content: '';
    background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);
    position: absolute;
    top: -2px;
    left:-2px;
    background-size: 400%;
    z-index: -1;
    filter: blur(5px);
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    animation: glowing 20s linear infinite;
    opacity: 0;
    transition: opacity .3s ease-in-out;
    border-radius: 10px;
}

.glow-on-hover:active {
    color: #000
}

.glow-on-hover:active:after {
    background: transparent;
}

.glow-on-hover:hover:before {
    opacity: 1;
}

.glow-on-hover:after {
    z-index: -1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: #403c3c;
    left: 0;
    top: 0;
    border-radius: 10px;
}

@keyframes glowing {
    0% { background-position: 0 0; }
    50% { background-position: 400% 0; }
    100% { background-position: 0 0; }
}
    a:link {
  color: gray;
}
    a:visited {
  color: gray;
}
    textarea {
    outline: none !important;
    width: 1000px;
    height: 250px;
    color: #fff;
    background-color: #2c2d2c;
    resize: both;
      
}

    .scrollable-menu {
    height: auto;
    max-height: 200px;
    overflow-x: hidden;
}

    /* width */
::-webkit-scrollbar {
  width: 10px;
}

/* Track */
::-webkit-scrollbar-track {
  background: #403c3c; 
}
 
/* Handle */
::-webkit-scrollbar-thumb {
  background: #888; 
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #555; 
}
  </style>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="ace/ace.js" type="text/javascript" charset="utf-8"></script>
  <script src="ace/ext-language_tools.js"></script>
</head>
  <body style="background-color: #25282c">
    <div id="mydiv">
  <div id="mydivheader">[Beta] UNIT HUB V1</div>
      <textarea id="script" name="script">-- paste your script here
print("First Online Executor")

print("If you're new read the stuff below.")
-- loadstring(game:HttpGet("https://editor.unithub.xyz/editor.lua"))() <- you must execute this first in your device executor (Synapse and Krnl will only work for this script) before you can execute from here.

-- NOTES --
-- !! Credits to Synapse X for the Scripting Utility and UnitIdkk#5339 for editor.lua

-- 1. This thing exists because im bored and this is incredibly useful when it comes to making scripts since KRNL's scripting utility is bs. With this site you can execute scripts to multiple devices at the same time.

-- 2. This executor will be IP based, therefore executing your scripts from here can be executed from a different device on your LAN.
-- Executor is global rn meaning anything you execute here will affect anyone who has executed editor.lua LOL

-- 3. This will obviously only work on the device that has executed the statement above.

-- Usage --

-- THEMES: Your option to choose a theme of your preference. WARNING THIS WILL REFRESH THE PAGE THEREFORE WILL LOSE YOUR SCRIPT.
-- SAVE: It will save your script to localStorage.
-- LOAD: It will load the last saved script.
-- EXECUTE: Execute the script.</textarea>
            <p style="color: white;">Status: <a id="status">Awaiting for connection...</a></p>
              <div>
              <button style="margin-left: 10px; float: left;" class="glow-on-hover" type="button" data-bs-toggle="dropdown">THEMES</button>
                            <ul class="dropdown-menu  scrollable-menu">
      <li id="themes"><a class="dropdown-item"></a></li>
    </ul>
        </div>
      <div>
                <button style="margin-right: 10px; float: right;" class="glow-on-hover" type="button" onclick="execute()">EXECUTE</button>
      </div>
      <div>
        <button style="margin-left: 10px;" class="glow-on-hover" type="button" onclick="savescript()">SAVE</button>
        <button style="margin-left: 10px;" class="glow-on-hover" type="button" onclick="loadscript()">LOAD</button>
        <button style="margin-left: 10px;" class="glow-on-hover" type="button" onclick="clearscript()">CLEAR</button>
      </div>
      <p style="margin-top: 10px; color: white;">[Made by <a href="https://www.ghostfxck.ga" target="_blank" style="">527476422542098442</a>]</p>
</div>
    <pre id="editor"></pre>
    <script>
//Make the DIV element draggagle:
dragElement(document.getElementById("mydiv"));

function dragElement(elmnt) {
  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
  if (document.getElementById(elmnt.id + "header")) {
    /* if present, the header is where you move the DIV from:*/
    document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
  } else {
    /* otherwise, move the DIV from anywhere inside the DIV:*/
    elmnt.onmousedown = dragMouseDown;
  }

  function dragMouseDown(e) {
    e = e || window.event;
    e.preventDefault();
    // get the mouse cursor position at startup:
    pos3 = e.clientX;
    pos4 = e.clientY;
    document.onmouseup = closeDragElement;
    // call a function whenever the cursor moves:
    document.onmousemove = elementDrag;
  }

  function elementDrag(e) {
    e = e || window.event;
    e.preventDefault();
    // calculate the new cursor position:
    pos1 = pos3 - e.clientX;
    pos2 = pos4 - e.clientY;
    pos3 = e.clientX;
    pos4 = e.clientY;
    // set the element's new position:
    elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
    elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
  }

  function closeDragElement() {
    /* stop moving when mouse button is released:*/
    document.onmouseup = null;
    document.onmousemove = null;
  }
}
      let theme = '<%= theme %>'.split(",")
      let text = "";
      for (let i = 0; i < theme.length; i++) {
  text += `<li id="themes"><a class="dropdown-item" id="changetheme" onclick="changetheme('${theme[i]}')">${theme[i]}</a></li>`;
}
      document.getElementById("themes").outerHTML = text;
</script>
    <script>
        var GetText;
        var SetText;
        var ClearText;
        var SetTheme;

        ace.require("ace/ext/language_tools");
        var editor = ace.edit("editor");
        let PageTheme = localStorage.getItem("theme");
        if (PageTheme) {
          console.log('Theme Applied')
          editor.setTheme(`ace/theme/${PageTheme}`);
        } else {
          editor.setTheme("ace/theme/tomorrow_night_eighties");
        }
        editor.session.setMode("ace/mode/lua");
        editor.setOption("enableLiveAutocompletion", true);
        editor.setOption("cursorStyle", "smooth");
        editor.setShowPrintMargin(false);
        document.getElementById('editor').style.fontSize='13px';

        /* do not edit below - Synapse X internal code */
        GetText = function()
        {
            return editor.getValue();
        }

        SetText = function(x)
        {
          editor.setValue(x);
          editor.session.setValue(x);
        }

        ClearText = function()
        {
          editor.setValue("");
        }

        SetTheme = function(th)
        {
          editor.setTheme("ace/theme/" + th);
        }

        editor.on("input", async function() 
        {
          await CefSharp.BindObjectAsync("synServiceAsync");

          synServiceAsync.textChanged(editor.getValue());
        });

        document.addEventListener('keydown', async e => 
        {
          if (e.ctrlKey) 
          {
            if (e.key === 's')
            {
              e.preventDefault();

              await CefSharp.BindObjectAsync("synServiceAsync");

              synServiceAsync.saveRequest(editor.getValue());
            }
            else if (e.key === 'o')
            {
              e.preventDefault();

              await CefSharp.BindObjectAsync("synServiceAsync");

              synServiceAsync.openRequest();
            }
          }
        });

        document.oncontextmenu = function()
        {
          return false;
        }
    </script>
      <script src="main.js" type="text/javascript" charset="utf-8"></script>
  </body>
</html>
